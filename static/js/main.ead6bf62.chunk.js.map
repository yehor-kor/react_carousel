{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","currentImg","setCurrentImg","stepNum","setStepNum","frameSizeNum","setFrameSizeNum","itemWidthNum","setItemWidthNum","durationNum","setDurationNum","className","map","image","index","style","display","transition","width","src","alt","type","onClick","prevImg","length","htmlFor","name","defaultValue","min","max","onChange","e","target","value","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAkIeA,EAtHmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OAMI,IALJC,YAKI,MALG,EAKH,MAJJC,iBAII,MAJQ,EAIR,MAHJC,iBAGI,MAHQ,IAGR,MAFJC,yBAEI,MAFgB,IAEhB,EACJ,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASJ,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAASH,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAASF,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAsCR,mBAASD,GAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KAEA,OACE,qCACE,sBAAKC,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SACGhB,EAAOiB,KAAI,SAACC,EAAOC,GAAR,OACV,oBAEEC,MAAO,CACLC,QAAQ,GAAD,OAAKF,GAASb,GAAca,EAAQb,EAAaI,EAAe,QAAU,QACjFY,WAAW,OAAD,OAASR,EAAT,MACVS,MAAM,GAAD,OAAKX,EAAL,OALT,SAQE,qBACEY,IAAG,UAAKN,GACRO,IAAG,UAAKN,EAAQ,MATbD,QAeX,qBAAIF,UAAU,iBAAd,UACE,wBACEU,KAAK,SACLV,UAAU,gBACVW,QACE,kBAAMrB,EAAa,GACdC,GAAc,SAAAqB,GAAO,OAAIA,EAAUpB,MAL5C,kBAUA,wBACEkB,KAAK,SACLV,UAAU,gBACVW,QACE,kBAAMrB,EAAaE,GAAYR,EAAO6B,OAAS,GAC1CtB,GAAc,SAAAqB,GAAO,OAAIA,EAAUpB,MAE1C,UAAQ,OAPV,wBAcJ,qBAAIQ,UAAU,oBAAd,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOc,QAAQ,OAAf,mBACA,uBACEJ,KAAK,SACLV,UAAU,gBACVe,KAAK,OACLC,aAAc/B,EACdgC,IAAK,EACLC,IAAK,GACLC,SAAU,SAACC,GAAD,OAAO3B,GAAY2B,EAAEC,OAAOC,aAI1C,sBAAKtB,UAAU,iBAAf,UACE,uBAAOc,QAAQ,aAAf,yBACA,uBACEJ,KAAK,SACLV,UAAU,gBACVe,KAAK,aACLC,aAAc9B,EACd+B,IAAK,EACLC,IAAK,GACLC,SAAU,SAACC,GAAD,OAAOzB,GAAiByB,EAAEC,OAAOC,aAI/C,sBAAKtB,UAAU,iBAAf,UACE,uBAAOc,QAAQ,QAAf,yBACA,uBACEJ,KAAK,SACLV,UAAU,gBACVe,KAAK,QACLC,aAAc7B,EACd8B,IAAK,GACLC,IAAK,IACLC,SAAU,SAACC,GAAD,OAAOvB,GAAiBuB,EAAEC,OAAOC,aAI/C,sBAAKtB,UAAU,iBAAf,UACE,uBAAOc,QAAQ,WAAf,iCACA,uBACEJ,KAAK,SACLV,UAAU,gBACVe,KAAK,WACLC,aAAc5B,EACd6B,IAAK,IACLC,IAAK,IACLjC,KAAM,IACNkC,SAAU,SAACC,GAAD,OAAOrB,GAAgBqB,EAAEC,OAAOC,oBClHhDC,E,4MACJC,MAAQ,CACNxC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWyC,KAAKD,MAAhBxC,OAER,OACE,sBAAKgB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmChB,EAAO6B,OAA1C,aAEA,cAAC,EAAD,CACE7B,OAAQyC,KAAKD,MAAMxC,OACnBC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,a,GA7BXsC,IAAMC,WAoCTJ,ICzCfK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ead6bf62.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  // infinite?: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  // infinite = false,\n}) => {\n  const [currentImg, setCurrentImg] = useState(0);\n  const [stepNum, setStepNum] = useState(step);\n  const [frameSizeNum, setFrameSizeNum] = useState(frameSize);\n  const [itemWidthNum, setItemWidthNum] = useState(itemWidth);\n  const [durationNum, setDurationNum] = useState(animationDuration);\n\n  return (\n    <>\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\">\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                display: `${index >= currentImg && index < currentImg + frameSizeNum ? 'block' : 'none'}`,\n                transition: `all ${durationNum}ms`,\n                width: `${itemWidthNum}px`,\n              }}\n            >\n              <img\n                src={`${image}`}\n                alt={`${index + 1}`}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <ul className=\"Carousel__list\">\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={\n              () => currentImg > 0\n                && setCurrentImg(prevImg => prevImg - stepNum)\n            }\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={\n              () => currentImg + stepNum <= (images.length - 1)\n                && setCurrentImg(prevImg => prevImg + stepNum)\n            }\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </ul>\n      </div>\n\n      <ul className=\"Carousel__options\">\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"step\">Step:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"step\"\n            defaultValue={step}\n            min={1}\n            max={10}\n            onChange={(e) => setStepNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"frame-size\">Frame size:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"frame-size\"\n            defaultValue={frameSize}\n            min={1}\n            max={10}\n            onChange={(e) => setFrameSizeNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"width\">Item width:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"width\"\n            defaultValue={itemWidth}\n            min={50}\n            max={200}\n            onChange={(e) => setItemWidthNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"duration\">Animation duration:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"duration\"\n            defaultValue={animationDuration}\n            min={100}\n            max={10000}\n            step={100}\n            onChange={(e) => setDurationNum(+e.target.value)}\n          />\n        </div>\n      </ul>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}