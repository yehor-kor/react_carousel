{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","currentImg","setCurrentImg","stepNum","setStepNum","frameSizeNum","setFrameSizeNum","itemWidthNum","setItemWidthNum","durationNum","setDurationNum","useEffect","timer","setTimeout","prevImg","length","clearTimeout","className","map","image","index","src","alt","style","width","height","type","onClick","htmlFor","name","defaultValue","min","max","onChange","e","target","value","App","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.752d86fe.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  // infinite?: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  // infinite = false,\n}) => {\n  const [currentImg, setCurrentImg] = useState(0);\n  const [stepNum, setStepNum] = useState(step);\n  const [frameSizeNum, setFrameSizeNum] = useState(frameSize);\n  const [itemWidthNum, setItemWidthNum] = useState(itemWidth);\n  const [durationNum, setDurationNum] = useState(animationDuration);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCurrentImg(prevImg => (\n        prevImg < images.length - stepNum ? prevImg + stepNum : 1\n      ));\n    }, durationNum);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  return (\n    <>\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\">\n          {images.map((image, index) => (\n            (index > currentImg - 1 && index < frameSizeNum + currentImg)\n            && (\n              <li>\n                <img\n                  src={`${image}`}\n                  alt={`${currentImg}`}\n                  style={{\n                    width: itemWidthNum,\n                    height: itemWidthNum,\n                  }}\n                />\n              </li>\n            )))}\n        </ul>\n\n        <ul className=\"Carousel__list\">\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={\n              () => currentImg > 0\n                && setCurrentImg(prevImg => prevImg - stepNum)\n            }\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={\n              () => currentImg + stepNum < (images.length - 1)\n                && setCurrentImg(prevImg => prevImg + stepNum)\n            }\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </ul>\n      </div>\n\n      <ul className=\"Carousel__options\">\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"step\">Step:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"step\"\n            defaultValue={step}\n            min={1}\n            max={10}\n            onChange={(e) => setStepNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"frame-size\">Frame size:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"frame-size\"\n            defaultValue={frameSize}\n            min={1}\n            max={10}\n            onChange={(e) => setFrameSizeNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"width\">Item width:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"width\"\n            defaultValue={itemWidth}\n            min={50}\n            max={200}\n            onChange={(e) => setItemWidthNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"duration\">Animation duration:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"duration\"\n            defaultValue={animationDuration}\n            min={100}\n            max={10000}\n            step={100}\n            onChange={(e) => setDurationNum(+e.target.value)}\n          />\n        </div>\n      </ul>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}