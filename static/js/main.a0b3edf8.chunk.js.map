{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImg","setCurrentImg","stepNum","setStepNum","frameSizeNum","setFrameSizeNum","itemWidthNum","setItemWidthNum","durationNum","setDurationNum","infiniteType","setInifiniteType","window","addEventListener","document","querySelectorAll","disabled","className","style","width","map","image","index","transition","transform","length","src","alt","type","onClick","btnPrev","btnNext","prevImg","htmlFor","name","defaultValue","min","max","onChange","e","target","value","defaultChecked","checked","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0b3edf8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite?: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step = 3,\n  frameSize = 3,\n  itemWidth = 130,\n  animationDuration = 1000,\n  infinite = false,\n}) => {\n  const [currentImg, setCurrentImg] = useState(0);\n  const [stepNum, setStepNum] = useState(step);\n  const [frameSizeNum, setFrameSizeNum] = useState(frameSize);\n  const [itemWidthNum, setItemWidthNum] = useState(itemWidth);\n  const [durationNum, setDurationNum] = useState(animationDuration);\n  const [infiniteType, setInifiniteType] = useState(infinite);\n\n  window.addEventListener('load', () => {\n    (document.querySelectorAll('.Carousel__btn')[0] as HTMLButtonElement)\n      .disabled = true;\n  });\n\n  return (\n    <>\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidthNum * frameSizeNum}px`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transition: `all ${durationNum}ms linear`,\n                transform: `translateX(${\n                  currentImg <= images.length - frameSizeNum - 1\n                    ? -itemWidthNum * currentImg\n                    : -itemWidthNum * (images.length - frameSizeNum)\n                }px)`,\n              }}\n            >\n              <img\n                src={`${image}`}\n                alt={`${index + 1}`}\n                style={{\n                  width: `${itemWidthNum}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <ul className=\"Carousel__group\">\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={() => {\n              const btnPrev = document.querySelectorAll('.Carousel__btn')[0] as\n                HTMLButtonElement;\n              const btnNext = document.querySelectorAll('.Carousel__btn')[1] as\n                HTMLButtonElement;\n\n              btnPrev.disabled = currentImg - stepNum <= 0\n                && !infiniteType;\n              btnNext.disabled = false;\n\n              return currentImg > 0\n                ? setCurrentImg(prevImg => prevImg - stepNum)\n                : infiniteType && setCurrentImg(images.length);\n            }}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            onClick={() => {\n              const btnPrev = document.querySelectorAll('.Carousel__btn')[0] as\n                HTMLButtonElement;\n              const btnNext = document.querySelectorAll('.Carousel__btn')[1] as\n                HTMLButtonElement;\n\n              btnNext.disabled = currentImg + stepNum >= (images.length - 1)\n                && !infiniteType;\n              btnPrev.disabled = false;\n\n              return currentImg + stepNum <= (images.length - 1)\n                ? setCurrentImg(prevImg => prevImg + stepNum)\n                : infiniteType && setCurrentImg(0);\n            }}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </ul>\n      </div>\n\n      <ul className=\"Carousel__options\">\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"step\">Step:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"step\"\n            defaultValue={step}\n            min={1}\n            max={10}\n            onChange={(e) => setStepNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"frame-size\">Frame size:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"frame-size\"\n            defaultValue={frameSize}\n            min={1}\n            max={10}\n            onChange={(e) => setFrameSizeNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"width\">Item width:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"width\"\n            defaultValue={itemWidth}\n            min={50}\n            max={200}\n            onChange={(e) => setItemWidthNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"duration\">Animation duration:</label>\n          <input\n            type=\"number\"\n            className=\"Carousel__inp\"\n            name=\"duration\"\n            defaultValue={animationDuration}\n            min={100}\n            max={10000}\n            step={100}\n            onChange={(e) => setDurationNum(+e.target.value)}\n          />\n        </div>\n\n        <div className=\"Carousel__item\">\n          <label htmlFor=\"infinite\">Is infinite:</label>\n          <input\n            type=\"checkbox\"\n            className=\"Carousel__inp\"\n            name=\"infinite\"\n            defaultChecked={infinite}\n            onChange={(e) => setInifiniteType(e.target.checked)}\n          />\n        </div>\n      </ul>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}